import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
# Load heart disease dataset
heart_df = pd.read_csv("heart.csv")
X_heart = heart_df.drop('target', axis=1)
y_heart = heart_df['target']
# Train heart disease model
Xh_train, Xh_test, yh_train, yh_test = train_test_split(X_heart, y_heart, test_size=0.2,
random_state=42)
heart_model = LogisticRegression(max_iter=1000)
heart_model.fit(Xh_train, yh_train)
# Simulate new heart patient data by removing 'target'
new_heart_data = heart_df.drop('target', axis=1)
heart_predictions = heart_model.predict(new_heart_data)
new_heart_data['Predicted_Heart_Disease'] = heart_predictions
# Save heart disease predictions
new_heart_data.to_csv("heart_disease_predictions.csv", index=False)
# Load diabetes dataset
diabetes_df = pd.read_csv("diabetes.csv")
X_diabetes = diabetes_df.drop('Outcome', axis=1)
y_diabetes = diabetes_df['Outcome']
# Train diabetes model
Xd_train, Xd_test, yd_train, yd_test = train_test_split(X_diabetes, y_diabetes,
test_size=0.2, random_state=42)
diabetes_model = DecisionTreeClassifier()
diabetes_model.fit(Xd_train, yd_train)
# Simulate new diabetes patient data by removing 'Outcome'
new_diabetes_data = diabetes_df.drop('Outcome', axis=1)
diabetes_predictions = diabetes_model.predict(new_diabetes_data)
new_diabetes_data['Predicted_Diabetes'] = diabetes_predictions
# Save diabetes predictions
new_diabetes_data.to_csv("diabetes_predictions.csv", index=False)
print("Predictions saved to 'heart_disease_predictions.csv' and
'diabetes_predictions.csv'.")
