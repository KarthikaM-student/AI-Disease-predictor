# Combined AI Disease Prediction: Heart Disease and Diabetes
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

# Heart Disease Prediction Function
def predict_heart_disease():
    print("---- Heart Disease Prediction ----")
    df = pd.read_csv("heart.csv")  # Make sure 'heart.csv' is in your project folder
    X = df.drop('target', axis=1)
    y = df['target']
    
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    model = LogisticRegression(max_iter=1000)
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    print("Heart Disease Model Accuracy:", accuracy_score(y_test, y_pred))

# Diabetes Prediction Function
def predict_diabetes():
    print("\n---- Diabetes Prediction ----")
    df = pd.read_csv("diabetes.csv")  # Make sure 'diabetes.csv' is in your project folder
    X = df.drop('Outcome', axis=1)
    y = df['Outcome']
    
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    model = DecisionTreeClassifier()
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    print("Diabetes Model Accuracy:", accuracy_score(y_test, y_pred))

# Run both predictions
if __name__ == "__main__":
    predict_heart_disease()
    predict_diabetes()
#sample output
---- Heart Disease Prediction ----
Heart Disease Model Accuracy: 0.85

---- Diabetes Prediction ----
Diabetes Model Accuracy: 0.74


